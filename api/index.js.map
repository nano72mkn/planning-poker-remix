{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/Users/shota/Documents/lab/planning-poker-remix/app/root.tsx", "../app/libs/firebase.ts", "../app/components/Layout/Layout.tsx", "../app/components/Layout/Footer/Footer.tsx", "../app/components/Layout/Header/Header.tsx", "../app/components/RoomCreateButton/RoomCreateButton.tsx", "/Users/shota/Documents/lab/planning-poker-remix/app/routes/room/$roomId.tsx", "../app/components/CardList/CardList.tsx", "../app/components/Card/Card.tsx", "../app/components/PointButtonList/PointButtonList.tsx", "../app/components/RoomUrlCopy/RoomUrlCopy.tsx", "../app/components/History/History.tsx", "../app/utils/getAverage.ts", "/Users/shota/Documents/lab/planning-poker-remix/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\n\nimport { ServerStyleContext } from \"./context\";\nimport createEmotionCache from \"./createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { createContext } from \"react\";\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n);\n", "// createEmotionCache.ts\nimport createCache from \"@emotion/cache\";\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"css\" });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport type { FirebaseOptions } from \"firebase/app\";\nimport { initFirebase } from \"./libs/firebase\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\";\nimport { useContext, useEffect } from \"react\";\nimport { Layout } from \"./components/Layout\";\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Planning Poker Remix\",\n  \"og:title\": \"Planning Poker Remix\",\n  \"og:type\": \"website\",\n  \"og:url\": \"https://planning-poker-remix.code-lab.xyz/\",\n  \"og:image\":\n    \"https://planning-poker-remix.code-lab.xyz/planning-poker-remix-ogp.png\",\n  \"twitter:title\": \"Planning Poker Remix\",\n  \"twitter:site\": \"@shota1995m\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const loader = () =>\n  json({\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID,\n  });\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n\nexport default function App() {\n  const data = useLoaderData<FirebaseOptions>();\n  initFirebase(data);\n\n  return (\n    <Document>\n      <ChakraProvider>\n        <Layout>\n          <Outlet />\n        </Layout>\n      </ChakraProvider>\n    </Document>\n  );\n}\n", "// Import the functions you need from the SDKs you need\nimport type { FirebaseApp, FirebaseOptions } from \"firebase/app\";\nimport { getApps } from \"firebase/app\";\nimport { getApp, initializeApp } from \"firebase/app\";\n\nexport const initFirebase = (config: FirebaseOptions): FirebaseApp =>\n  getApps().length === 0 ? initializeApp(config) : getApp();\n", "import { Container } from \"@chakra-ui/react\";\nimport { Footer } from \"./Footer\";\nimport { Header } from \"./Header\";\n\nexport const Layout: React.FC = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <Container maxW=\"container.lg\">{children}</Container>\n      <Footer />\n    </>\n  );\n};\n", "import { Container, Flex, Link, Spacer, Text } from \"@chakra-ui/react\";\n\nexport const Footer: React.FC = () => {\n  return (\n    <Container maxW=\"container.lg\" mt={10}>\n      <Flex>\n        <Text>\n          \u00A9 2022; Built by\n          <Link href=\"https://twitter.com/shota1995m\" isExternal ml={2}>\n            @shota1995m\n          </Link>\n        </Text>\n        <Spacer />\n        <Link\n          href=\"https://github.com/shota1995m/planning-poker-remix\"\n          isExternal\n        >\n          GitHub\n        </Link>\n      </Flex>\n    </Container>\n  );\n};\n", "import { Container, Flex, Spacer, Text } from \"@chakra-ui/react\";\nimport { useParams } from \"@remix-run/react\";\nimport { RoomCreateButton } from \"~/components/RoomCreateButton\";\n\nexport const Header: React.FC = () => {\n  const params = useParams();\n  return (\n    <Container maxW=\"container.lg\" marginBottom={5}>\n      <Flex paddingY={5}>\n        <Text>Planning Poker Remix</Text>\n        <Spacer />\n        {params.roomId ? (\n          <Text>roomId: {params.roomId}</Text>\n        ) : (\n          <RoomCreateButton />\n        )}\n      </Flex>\n    </Container>\n  );\n};\n", "import { Button } from \"@chakra-ui/react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { getDatabase, ref, set } from \"firebase/database\";\nimport { nanoid } from \"nanoid\";\n\nexport const RoomCreateButton: React.FC = () => {\n  let navigate = useNavigate();\n\n  const createRoom = async () => {\n    const database = getDatabase();\n    const roomId = nanoid(6);\n    const userId = nanoid(6);\n\n    await set(ref(database, `rooms/${roomId}`), {\n      ownerId: userId,\n    });\n    sessionStorage.setItem(\"userId\", userId);\n\n    navigate(`/room/${roomId}`);\n  };\n\n  return (\n    <Button colorScheme=\"teal\" onClick={createRoom}>\n      Create new room\n    </Button>\n  );\n};\n", "import { Button, HStack, Text, VStack } from \"@chakra-ui/react\";\nimport { useNavigate, useParams } from \"@remix-run/react\";\nimport {\n  getDatabase,\n  ref,\n  runTransaction,\n  onValue,\n  onDisconnect,\n  child,\n  get,\n} from \"firebase/database\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\nimport { CardList } from \"~/components/CardList\";\nimport { PointButtonList } from \"~/components/PointButtonList\";\nimport { RoomUrlCopy } from \"~/components/RoomUrlCopy\";\nimport { History } from \"~/components/History\";\nimport { getAverage } from \"~/utils/getAverage\";\n\ninterface Room {\n  isOpen: boolean;\n  poker: PokerData;\n  history: PokerData[];\n}\nexport interface PokerData {\n  [key: string]: number | string;\n}\n\nexport default function Index() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const [userId, setUserId] = useState<string>(\"anonymous\");\n  const [pokerData, setPokerData] = useState<Room[\"poker\"]>({});\n  const [isOwner, setIsOwner] = useState<boolean>(true);\n  const [isOpen, setIsOpen] = useState<Room[\"isOpen\"]>(false);\n  const [history, setHistory] = useState<Room[\"history\"]>([]);\n  const database = getDatabase();\n\n  const roomRef = ref(database, `rooms/${params.roomId}`);\n  const pokerRef = child(roomRef, \"poker\");\n\n  const init = async (currentUserId: string) => {\n    const ownerId = await get(child(roomRef, \"ownerId\"));\n    setUserId(currentUserId);\n\n    runTransaction(pokerRef, (poker) => ({\n      ...poker,\n      [currentUserId]: \"\",\n    }));\n\n    if (ownerId.val() === currentUserId) {\n      runTransaction(roomRef, (room) => ({\n        ...room,\n        isOpen: false,\n      }));\n      onDisconnect(roomRef).remove();\n    } else {\n      setIsOwner(false);\n      onDisconnect(child(pokerRef, currentUserId)).remove();\n    }\n  };\n\n  useEffect(() => {\n    onValue(roomRef, (room) => {\n      const roomData = room.val() as Room;\n      if (!roomData) {\n        navigate(\"/\");\n        return;\n      }\n      setPokerData(roomData?.poker || {});\n      setIsOpen(roomData?.isOpen || false);\n      setHistory(roomData?.history || []);\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const ownerId = await get(child(roomRef, \"ownerId\"));\n      if (!ownerId.val()) {\n        navigate(\"/\");\n        return;\n      }\n\n      if (userId !== \"anonymous\") return;\n\n      const sessionUserId = sessionStorage.getItem(\"userId\");\n      if (sessionUserId) {\n        init(sessionUserId);\n        return;\n      }\n\n      const newUserId = nanoid(6);\n      setUserId(newUserId);\n      sessionStorage.setItem(\"userId\", newUserId);\n\n      init(newUserId);\n    })();\n  }, []);\n\n  const reset = () => {\n    runTransaction(roomRef, (room) => ({\n      ...room,\n      isOpen: false,\n      poker: Object.fromEntries(\n        Object.keys(room?.poker).map((userId) => [userId, \"\"])\n      ),\n      history: [room?.poker, ...(room?.history || [])],\n    }));\n  };\n\n  return (\n    <VStack spacing={5} align=\"flex-start\">\n      {params.roomId && (\n        <>\n          <RoomUrlCopy roomId={params.roomId} />\n          <PointButtonList\n            database={database}\n            roomId={params.roomId}\n            userId={userId}\n            isOpen={isOpen}\n          />\n        </>\n      )}\n      {pokerData && <CardList pokerData={pokerData} isOpen={isOpen} />}\n\n      <Text>Average: {isOpen ? getAverage(pokerData) : \"?\"}</Text>\n\n      <HStack>\n        {isOwner && (\n          <Button colorScheme=\"teal\" onClick={reset} disabled={!isOpen}>\n            Reset\n          </Button>\n        )}\n        <History history={history} />\n      </HStack>\n    </VStack>\n  );\n}\n", "import { Wrap, WrapItem } from \"@chakra-ui/react\";\nimport type { PokerData } from \"~/routes/room/$roomId\";\nimport { Card } from \"../Card/Card\";\n\ninterface CardListProps {\n  pokerData: PokerData;\n  isOpen: boolean;\n}\n\nexport const CardList: React.FC<CardListProps> = ({ pokerData, isOpen }) => (\n  <Wrap spacing=\"10px\">\n    {pokerData &&\n      Object.entries(pokerData).map(([userId, point]) => (\n        <WrapItem key={userId}>\n          <Card isOpen={isOpen} isSelected={!isOpen && point !== \"\"}>\n            {point}\n          </Card>\n        </WrapItem>\n      ))}\n  </Wrap>\n);\n", "import { Flex } from \"@chakra-ui/react\";\n\ninterface CardProps {\n  isOpen: boolean;\n  isSelected: boolean;\n}\n\nexport const Card: React.FC<CardProps> = ({ children, isOpen, isSelected }) => {\n  return (\n    <Flex\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      width={50}\n      height={70}\n      borderWidth=\"1px\"\n      borderRadius=\"md\"\n      borderColor={isSelected ? \"teal.300\" : \"gray.200\"}\n      p=\"4\"\n      boxShadow=\"md\"\n      fontWeight={isOpen ? \"bold\" : \"normal\"}\n      fontSize={isOpen ? \"xl\" : \"md\"}\n    >\n      {isOpen ? children : \"?\"}\n    </Flex>\n  );\n};\n", "import { Button, HStack, Select, VStack } from \"@chakra-ui/react\";\nimport type { Database } from \"firebase/database\";\nimport { child, ref, runTransaction } from \"firebase/database\";\nimport { useState } from \"react\";\n\ninterface PointButtonListProps {\n  database: Database;\n  roomId: string;\n  userId: string;\n  isOpen: boolean;\n}\n\ninterface CardData {\n  label: string;\n  value: number;\n}\n\ntype CardPack = CardData[];\n\ntype CardPackName = \"Mountain Goat\" | \"Fibonacci\" | \"Sequential\";\n\ntype CardPacks = {\n  [key in CardPackName]: CardPack;\n};\n\nconst cardPacks: CardPacks = {\n  \"Mountain Goat\": [\n    { label: \"0\", value: 0 },\n    { label: \"1/2\", value: 0.5 },\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"5\", value: 5 },\n    { label: \"8\", value: 8 },\n    { label: \"13\", value: 13 },\n    { label: \"20\", value: 20 },\n    { label: \"40\", value: 40 },\n    { label: \"100\", value: 100 },\n    { label: \"?\", value: 0 },\n    { label: \"\u2615\uFE0F\", value: 0 },\n  ],\n  Fibonacci: [\n    { label: \"0\", value: 0 },\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"5\", value: 5 },\n    { label: \"8\", value: 8 },\n    { label: \"13\", value: 13 },\n    { label: \"21\", value: 21 },\n    { label: \"34\", value: 34 },\n    { label: \"55\", value: 55 },\n    { label: \"89\", value: 89 },\n    { label: \"?\", value: 0 },\n  ],\n  Sequential: [\n    { label: \"0\", value: 0 },\n    { label: \"1\", value: 1 },\n    { label: \"2\", value: 2 },\n    { label: \"3\", value: 3 },\n    { label: \"4\", value: 4 },\n    { label: \"5\", value: 5 },\n    { label: \"6\", value: 6 },\n    { label: \"7\", value: 7 },\n    { label: \"8\", value: 8 },\n    { label: \"9\", value: 9 },\n    { label: \"10\", value: 10 },\n    { label: \"?\", value: 0 },\n  ],\n};\n\nexport const PointButtonList: React.FC<PointButtonListProps> = ({\n  database,\n  roomId,\n  userId,\n  isOpen,\n}) => {\n  const [cardPack, setCardPack] = useState<CardPackName>(\"Mountain Goat\");\n  const roomRef = ref(database, `rooms/${roomId}`);\n  const pokerRef = child(roomRef, \"poker\");\n\n  const setPoint = (point: number | string) => {\n    runTransaction(pokerRef, (poker) => ({\n      ...(poker || {}),\n      [userId]: point,\n    }));\n\n    runTransaction(roomRef, (room) => ({\n      ...room,\n      isOpen:\n        Object.values(room?.poker || {}).find((point) => point === \"\") ===\n        undefined,\n    }));\n  };\n  return (\n    <VStack>\n      <Select\n        value={cardPack}\n        onChange={(event) => setCardPack(event.target.value as CardPackName)}\n      >\n        {Object.keys(cardPacks).map((cardPackName) => (\n          <option key={cardPackName} value={cardPackName}>\n            {cardPackName}\n          </option>\n        ))}\n      </Select>\n      <HStack>\n        {cardPacks[cardPack].map((pack, index) => (\n          <Button\n            key={index}\n            colorScheme=\"teal\"\n            onClick={() => setPoint(pack.value)}\n            disabled={isOpen}\n          >\n            {pack.label}\n          </Button>\n        ))}\n      </HStack>\n    </VStack>\n  );\n};\n", "import { Button, Flex, Input, useClipboard } from \"@chakra-ui/react\";\n\ninterface RoomUrlCopyProps {\n  roomId: string;\n}\n\nexport const RoomUrlCopy: React.FC<RoomUrlCopyProps> = ({ roomId }) => {\n  const { hasCopied, onCopy } = useClipboard(\n    typeof location === \"object\" ? location.href : \"\"\n  );\n\n  return (\n    <Flex width=\"100%\">\n      <Input\n        type=\"text\"\n        isReadOnly\n        value={typeof location === \"object\" ? location.href : \"\"}\n      />\n      <Button size=\"md\" onClick={onCopy} ml={2}>\n        {hasCopied ? \"copied!\" : \"url copy\"}\n      </Button>\n    </Flex>\n  );\n};\n", "import {\n  Accordion,\n  AccordionButton,\n  AccordionIcon,\n  AccordionItem,\n  AccordionPanel,\n  Box,\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n  useDisclosure,\n  VStack,\n} from \"@chakra-ui/react\";\nimport type { PokerData } from \"~/routes/room/$roomId\";\nimport { getAverage } from \"~/utils/getAverage\";\nimport { CardList } from \"../CardList\";\n\ninterface HistoryProps {\n  history: PokerData[];\n}\n\nexport const History: React.FC<HistoryProps> = ({ history }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      <Button colorScheme=\"teal\" onClick={onOpen}>\n        History\n      </Button>\n\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader>History</DrawerHeader>\n          <DrawerBody>\n            <VStack spacing={2} align=\"flex-start\" alignItems=\"stretch\">\n              <Accordion allowMultiple>\n                {history &&\n                  history.map((pokerData, index) => (\n                    <AccordionItem key={index}>\n                      <h2>\n                        <AccordionButton>\n                          <Box flex=\"1\" textAlign=\"left\">\n                            Average: {getAverage(pokerData)}\n                          </Box>\n                          <AccordionIcon />\n                        </AccordionButton>\n                      </h2>\n                      <AccordionPanel pb={4}>\n                        <CardList pokerData={pokerData} isOpen={true} />\n                      </AccordionPanel>\n                    </AccordionItem>\n                  ))}\n              </Accordion>\n            </VStack>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n};\n", "import type { PokerData } from \"~/routes/room/$roomId\";\n\nexport const getAverage = (pokerData: PokerData) => {\n  const values = Object.values(pokerData);\n\n  if (values.length === 0) return 0;\n\n  return Math.floor(\n    (values.reduce((prev, current) => {\n      if (typeof current !== \"number\") return prev;\n      if (typeof prev !== \"number\") return prev;\n      return prev + current;\n    }) as number) / values.length\n  );\n};\n", "export default function Index() {\n  return (\n    <div\n      style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}\n    ></div>\n  );\n}\n", "export default {'version':'a8000d27','entry':{'module':'/build/entry.client-P2R5CPK3.js','imports':['/build/_shared/chunk-OJ3WYMP7.js','/build/_shared/chunk-NORDOFT3.js','/build/_shared/chunk-CMCSJD5L.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-SA5PMCTQ.js','imports':['/build/_shared/chunk-2HFV4DIS.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-2V3DOBWD.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/room/$roomId':{'id':'routes/room/$roomId','parentId':'root','path':'room/:roomId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/room/$roomId-665MSJK4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-A8000D27.js'};", "\nimport * as entryServer from \"/Users/shota/Documents/lab/planning-poker-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/shota/Documents/lab/planning-poker-remix/app/root.tsx\";\nimport * as route1 from \"/Users/shota/Documents/lab/planning-poker-remix/app/routes/room/$roomId.tsx\";\nimport * as route2 from \"/Users/shota/Documents/lab/planning-poker-remix/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/room/$roomId\": {\n      id: \"routes/room/$roomId\",\n      parentId: \"root\",\n      path: \"room/:roomId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
