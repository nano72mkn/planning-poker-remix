{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/context.tsx", "../app/createEmotionCache.ts", "/Users/shota/Documents/lab/planning-poker-remix/app/root.tsx", "../app/libs/firebase.ts", "/Users/shota/Documents/lab/planning-poker-remix/app/routes/room/$roomId.tsx", "/Users/shota/Documents/lab/planning-poker-remix/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { renderToString } from \"react-dom/server\";\nimport { CacheProvider } from \"@emotion/react\";\nimport createEmotionServer from \"@emotion/server/create-instance\";\n\nimport { ServerStyleContext } from \"./context\";\nimport createEmotionCache from \"./createEmotionCache\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const cache = createEmotionCache();\n  const { extractCriticalToChunks } = createEmotionServer(cache);\n\n  const html = renderToString(\n    <ServerStyleContext.Provider value={null}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  const chunks = extractCriticalToChunks(html);\n\n  const markup = renderToString(\n    <ServerStyleContext.Provider value={chunks.styles}>\n      <CacheProvider value={cache}>\n        <RemixServer context={remixContext} url={request.url} />\n      </CacheProvider>\n    </ServerStyleContext.Provider>\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { createContext } from \"react\";\n\nexport interface ServerStyleContextData {\n  key: string;\n  ids: Array<string>;\n  css: string;\n}\n\nexport const ServerStyleContext = createContext<\n  ServerStyleContextData[] | null\n>(null);\n\nexport interface ClientStyleContextData {\n  reset: () => void;\n}\n\nexport const ClientStyleContext = createContext<ClientStyleContextData | null>(\n  null\n);\n", "// createEmotionCache.ts\nimport createCache from \"@emotion/cache\";\n\nexport default function createEmotionCache() {\n  return createCache({ key: \"css\" });\n}\n", "import type { MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData,\n} from \"@remix-run/react\";\nimport { withEmotionCache } from \"@emotion/react\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport type { FirebaseOptions } from \"firebase/app\";\nimport { initFirebase } from \"./libs/firebase\";\n\nimport { ServerStyleContext, ClientStyleContext } from \"./context\";\nimport { useContext, useEffect } from \"react\";\n\ninterface DocumentProps {\n  children: React.ReactNode;\n}\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"New Remix App\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport const loader = () =>\n  json({\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: process.env.FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.FIREBASE_PROJECT_ID,\n    storageBucket: process.env.FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_APP_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID,\n  });\n\nconst Document = withEmotionCache(\n  ({ children }: DocumentProps, emotionCache) => {\n    const serverStyleData = useContext(ServerStyleContext);\n    const clientStyleData = useContext(ClientStyleContext);\n\n    // Only executed on client\n    useEffect(() => {\n      // re-link sheet container\n      emotionCache.sheet.container = document.head;\n      // re-inject tags\n      const tags = emotionCache.sheet.tags;\n      emotionCache.sheet.flush();\n      tags.forEach((tag) => {\n        (emotionCache.sheet as any)._insertTag(tag);\n      });\n      // reset cache to reapply global styles\n      clientStyleData?.reset();\n    }, []);\n\n    return (\n      <html lang=\"en\">\n        <head>\n          <meta charSet=\"utf-8\" />\n          <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n          <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n          <link rel=\"preconnect\" href=\"https://fonts.gstaticom\" />\n          <link\n            href=\"https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,300;1,400;1,500;1,600;1,700;1,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n          <Meta />\n          <Links />\n          {serverStyleData?.map(({ key, ids, css }) => (\n            <style\n              key={key}\n              data-emotion={`${key} ${ids.join(\" \")}`}\n              dangerouslySetInnerHTML={{ __html: css }}\n            />\n          ))}\n        </head>\n        <body>\n          {children}\n          <ScrollRestoration />\n          <Scripts />\n          {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n        </body>\n      </html>\n    );\n  }\n);\n\nexport default function App() {\n  const data = useLoaderData<FirebaseOptions>();\n  initFirebase(data);\n\n  return (\n    <Document>\n      <ChakraProvider>\n        <Outlet />\n      </ChakraProvider>\n    </Document>\n  );\n}\n", "// Import the functions you need from the SDKs you need\nimport type { FirebaseApp, FirebaseOptions } from \"firebase/app\";\nimport { getApps } from \"firebase/app\";\nimport { getApp, initializeApp } from \"firebase/app\";\n\nexport const initFirebase = (config: FirebaseOptions): FirebaseApp =>\n  getApps().length === 0 ? initializeApp(config) : getApp();\n", "import { Button } from \"@chakra-ui/react\";\nimport { useNavigate, useParams } from \"@remix-run/react\";\nimport {\n  getDatabase,\n  ref,\n  push,\n  runTransaction,\n  onValue,\n  onDisconnect,\n  remove,\n  child,\n  get,\n  set,\n} from \"firebase/database\";\nimport { nanoid } from \"nanoid\";\nimport { useEffect, useState } from \"react\";\n\ninterface Room {\n  ownerId: string;\n}\n\ninterface PokerData {\n  [key: string]: string;\n}\n\nexport default function Index() {\n  const navigate = useNavigate();\n  const params = useParams();\n  const [userId, setUserId] = useState<string>(\"anonymous\");\n  const [pokerData, setPokerData] = useState<PokerData>({});\n  const [isOwner, setIsOwner] = useState<boolean>(true);\n  const database = getDatabase();\n\n  const roomRef = ref(database, `rooms/${params.roomId}`);\n  const pokerRef = child(roomRef, \"poker\");\n\n  const init = async (currentUserId: string) => {\n    const ownerId = await get(child(roomRef, \"ownerId\"));\n    setUserId(currentUserId);\n\n    runTransaction(pokerRef, (poker) => ({\n      ...poker,\n      [currentUserId]: \"\",\n    }));\n\n    if (!ownerId.val() || ownerId.val() === currentUserId) {\n      set(child(roomRef, \"ownerId\"), currentUserId);\n      onDisconnect(roomRef).remove();\n    } else {\n      setIsOwner(false);\n      onDisconnect(child(pokerRef, currentUserId)).remove();\n    }\n  };\n\n  useEffect(() => {\n    if (pokerData !== null || isOwner) return;\n    navigate(\"/\");\n  }, [pokerData]);\n\n  useEffect(() => {\n    onValue(pokerRef, (poker) => {\n      setPokerData(poker.val());\n    });\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      if (userId !== \"anonymous\") return;\n\n      const sessionUserId = sessionStorage.getItem(\"userId\");\n      if (sessionUserId) {\n        init(sessionUserId);\n        return;\n      }\n\n      const newUserId = nanoid(6);\n      setUserId(newUserId);\n      sessionStorage.setItem(\"userId\", newUserId);\n\n      init(newUserId);\n    })();\n  }, []);\n\n  const setPoint = (point: number) => {\n    runTransaction(pokerRef, (poker) => ({\n      ...poker,\n      [userId]: point,\n    }));\n  };\n\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      {params.roomId} userId: {userId}\n      <Button colorScheme=\"teal\" onClick={() => setPoint(1)}>\n        1\n      </Button>\n      <Button colorScheme=\"teal\" onClick={() => setPoint(2)}>\n        2\n      </Button>\n      <Button colorScheme=\"teal\" onClick={() => setPoint(3)}>\n        3\n      </Button>\n      <Button colorScheme=\"teal\" onClick={() => setPoint(5)}>\n        5\n      </Button>\n      <Button colorScheme=\"teal\" onClick={() => setPoint(8)}>\n        8\n      </Button>\n      {pokerData &&\n        Object.entries(pokerData).map(([userId, point]) => (\n          <p key={userId}>\n            {userId}:{point}\n          </p>\n        ))}\n    </div>\n  );\n}\n", "import { Button } from \"@chakra-ui/react\";\nimport { useNavigate } from \"@remix-run/react\";\nimport { nanoid } from \"nanoid\";\n\nexport default function Index() {\n  const navigate = useNavigate();\n\n  const createRoom = async () => {\n    const roomId = nanoid(6);\n    const userId = nanoid(6);\n\n    sessionStorage.setItem(\"userId\", userId);\n\n    navigate(`/room/${roomId}`);\n  };\n\n  return (\n    <div style={{ fontFamily: \"system-ui, sans-serif\", lineHeight: \"1.4\" }}>\n      <Button colorScheme=\"teal\" onClick={createRoom}>\n        \u30EB\u30FC\u30E0\u4F5C\u6210\n      </Button>\n    </div>\n  );\n}\n", "export default {'version':'5daaba99','entry':{'module':'/build/entry.client-67ZTOWGJ.js','imports':['/build/_shared/chunk-ZDTAQNDB.js','/build/_shared/chunk-GEFTVULP.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-P2BLVAR4.js','imports':['/build/_shared/chunk-XA7Q2HKN.js','/build/_shared/chunk-ZUV5BBH6.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-RG2WZDJD.js','imports':['/build/_shared/chunk-KQLWYCPS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/room/$roomId':{'id':'routes/room/$roomId','parentId':'root','path':'room/:roomId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/room/$roomId-HSAY46TT.js','imports':['/build/_shared/chunk-KQLWYCPS.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-5DAABA99.js'};", "\nimport * as entryServer from \"/Users/shota/Documents/lab/planning-poker-remix/app/entry.server.tsx\";\nimport * as route0 from \"/Users/shota/Documents/lab/planning-poker-remix/app/root.tsx\";\nimport * as route1 from \"/Users/shota/Documents/lab/planning-poker-remix/app/routes/room/$roomId.tsx\";\nimport * as route2 from \"/Users/shota/Documents/lab/planning-poker-remix/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/room/$roomId\": {\n      id: \"routes/room/$roomId\",\n      parentId: \"root\",\n      path: \"room/:roomId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route2\n    }\n  };"],
  "mappings": "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",
  "names": []
}
